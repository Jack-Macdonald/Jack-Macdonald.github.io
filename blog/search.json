[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Posts",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n\n\n\n\n  \n\n\n\n\nAssignment One\n\n\n\n\n\n\n\nassignment\n\n\ncode\n\n\ndata visualization\n\n\n\n\n\n\n\n\n\n\n\nSep 13, 2023\n\n\nJack Macdonald\n\n\n\n\n\n\n  \n\n\n\n\nAssignment One\n\n\n\n\n\n\n\nassignment\n\n\nsurvey\n\n\ndata methods\n\n\n\n\n\n\n\n\n\n\n\nSep 12, 2023\n\n\nJack Macdonald\n\n\n\n\n\n\n  \n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\n\n\nAug 3, 2023\n\n\nJack Macdonald\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Assignment One",
    "section": "",
    "text": "Q1)\nHere is the survey. It includes the changes from question three to six.\nQ2)\nA) The survey is comprised of a primer at the beginning followed by 17 questions.\nB) The questions ask the for opinions about at-home movie watching and some demographic questions at the end.\nC) There are blocks of three or four questions that relate to one another then it moves on to another related topic. For example, questions 4-6 all relate to proposed software that could detect possible not safe for work content. At the end, there are five questions about the individual.\nQ3-6) The changes to the survey were made in the published survey.\nQ7) Question two is not mobile friendly. The users cannot read the questions and all of the answer ranges at once. They must scroll left and right to find all of answer choices. This is also an issue of the questions with answer choices that are oriented horizontally."
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "posts/6356assignment1/index.html",
    "href": "posts/6356assignment1/index.html",
    "title": "Assignment One",
    "section": "",
    "text": "Q1) Anscombe\n\n\nShow Hidden Code\ndata(anscombe)\nff <- y ~ x\nmods <- setNames(as.list(1:4), paste0(\"lm\", 1:4))\n\n# Plot using for loop\nfor(i in 1:4) {\n  ff[2:3] <- lapply(paste0(c(\"y\",\"x\"), i), as.name)\n  ## or   ff[[2]] <- as.name(paste0(\"y\", i))\n  ##      ff[[3]] <- as.name(paste0(\"x\", i))\n  mods[[i]] <- lmi <- lm(ff, data = anscombe)\n  #print(anova(lmi))\n}\n\n# Preparing for the plots\nop <- par(mfrow = c(2, 2), mar = 0.1+c(4,4,1,1), oma =  c(0, 0, 2, 0))\n\n# Plot charts using for loop\nfor(i in 1:4) {\n  ff[2:3] <- lapply(paste0(c(\"y\",\"x\"), i), as.name)\n  plot(ff, data = anscombe, col = \"red\", pch = 21, bg = \"orange\", cex = 1.2,\n       xlim = c(3, 19), ylim = c(3, 13))\n  abline(mods[[i]], col = \"blue\")\n}\nmtext(\"Anscombe's 4 Regression data sets\", outer = TRUE, cex = 1.5)\n\n\n\n\n\nQ2) Generative Art\nGenerative Art is created using an autonomous system with a set of parameters or boundaries. AI generated art has gained popularity with recent developments in consumer AI programs. Programs like Midjourney and OpenAI’s DALL-E are two examples. You can give a prompt to these programs and they will generate artwork based on it. This is not the only example of generative art. Hans Haacke used a form of generative art with Condensation Cube. The process of the condensation forming on the inside of the cube is the autonomous creation of this type of generative art. Generative art can also come in the form of music. Brian Eno is a musician that pioneered generative music. He created an album called “Generative Music 1” with the use of SSEYO’s Koan generative music system.\n\n\n\n\n\n\nNightCafe Art with the prompt “A Bob Ross painting in the style of Monet”\n\n\n\n\n\n\n\nCondensation Cube by Hans Haacke\n\n\n\n\n\n\n\nBrian Eno’s album Generative Music 1 (1996)\n\n\n\n\n\nQ3) Fall.R\n\n\nShow Hidden Code\nlibrary(gsubfn)\nlibrary(tidyverse)\n\naxiom=\"X\"\nrules=list(\"X\"=\"F-[[X]+X]+F[+FX]-X\", \"F\"=\"FF\")\nangle=22.5\ndepth=6\n\n\nfor (i in 1:depth) axiom=gsubfn(\".\", rules, axiom)\n\nactions=str_extract_all(axiom, \"\\\\d*\\\\+|\\\\d*\\\\-|F|L|R|\\\\[|\\\\]|\\\\|\") %>% unlist\n\nstatus=data.frame(x=numeric(0), y=numeric(0), alfa=numeric(0))\npoints=data.frame(x1 = 0, y1 = 0, x2 = NA, y2 = NA, alfa=90, depth=1)\n\n\n# Generating data\n# Note: may take a minute or two\n\nfor (action in actions)\n{\n  if (action==\"F\")\n  {\n    x=points[1, \"x1\"]+cos(points[1, \"alfa\"]*(pi/180))\n    y=points[1, \"y1\"]+sin(points[1, \"alfa\"]*(pi/180))\n    points[1,\"x2\"]=x\n    points[1,\"y2\"]=y\n    data.frame(x1 = x, y1 = y, x2 = NA, y2 = NA,\n               alfa=points[1, \"alfa\"],\n               depth=points[1,\"depth\"]) %>% rbind(points)->points\n  }\n  if (action %in% c(\"+\", \"-\")){\n    alfa=points[1, \"alfa\"]\n    points[1, \"alfa\"]=eval(parse(text=paste0(\"alfa\",action, angle)))\n  }\n  if(action==\"[\"){\n    data.frame(x=points[1, \"x1\"], y=points[1, \"y1\"], alfa=points[1, \"alfa\"]) %>%\n      rbind(status) -> status\n    points[1, \"depth\"]=points[1, \"depth\"]+1\n  }\n\n  if(action==\"]\"){\n    depth=points[1, \"depth\"]\n    points[-1,]->points\n    data.frame(x1=status[1, \"x\"], y1=status[1, \"y\"], x2=NA, y2=NA,\n               alfa=status[1, \"alfa\"],\n               depth=depth-1) %>%\n      rbind(points) -> points\n    status[-1,]->status\n  }\n}\nggplot() +\n  geom_segment(aes(x = x1, y = y1, xend = x2, yend = y2),\n               lineend = \"round\",\n               color=\"tomato3\", # Set your own Fall color?\n               data=na.omit(points)) +\n  coord_fixed(ratio = 1) +\n  theme(panel.background = element_rect(fill = \"wheat\"),\n        panel.grid = element_blank(),\n        axis.title = element_blank(),\n        axis.ticks = element_blank(),\n        axis.text  = element_blank())"
  }
]